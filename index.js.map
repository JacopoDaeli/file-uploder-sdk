{"version":3,"sources":["index-src.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["class Cropper {\n  constructor(cropperID, aspectRatio) {\n    this.cropperID = cropperID;\n\n    this._cropper = $(`.${cropperID} > img`).cropper({\n      aspectRatio: aspectRatio,\n      autoCropArea: 0.75,\n      strict: false,\n      guides: true,\n      highlight: false,\n      dragCrop: false,\n      cropBoxMovable: true,\n      cropBoxResizable: true,\n      zoomable: false,\n      movable: false\n    });\n  }\n  destroy() {\n    // this._cropper.destroy();\n  }\n  getData() {\n    return this._cropper.cropper('getData');\n  }\n  hide() {\n    $(`.${cropperID}`).hide();\n  }\n  show() {\n    $(`.${cropperID}`).show();\n  }\n}\n\nexport class FileUploader {\n\n  _showCroppers() {\n\n    this.uploadedImages.forEach((uploadedFile, i) => {\n\n      this.croppers.forEach((cropperRequest, j) => {\n        const cropperID = `cropper--${i}--${j}`;\n        const imgID = `img--${cropperID}`;\n        const img = `<img id=\"${imgID}\" src=\"${this.uploadedImages[i].url}\" style=\"width: 100%\" />`;\n        let div;\n        if(i === 0 && j === 0) {\n          div = `<div class='${cropperID}'>${img}</div>`;\n        } else {\n          div = `<div class='${cropperID}' style=\"display: none\">${img}</div>`;\n        }\n        $(fileUploaderContainer).append(div);\n        $(`#${imgID}`).load(() => {\n          this.cropperInstances[i] = new Cropper(cropperID, cropperRequest);\n        });\n      });\n\n    });\n\n    // init next btn\n    $('#nextBtn').on('click', e => {\n      this.uploadedImagesMetadata.push(this.cropperInstances[this.currentIndex].getData);\n      this.cropperInstances[this.currentIndex].hide();\n\n      if(!this.cropperInstances[this.currentIndex+1]) {\n        return console.log(this.uploadedImagesMetadata);\n        // return location.reload();\n      }\n\n      this.currentIndex++;\n    });\n  }\n\n  constructor(fileUploaderContainer, fileUploaderMediaController, opts) {\n\n    opts = opts || {};\n    if(!fileUploaderContainer) throw new Error('fileUploaderContainer is mandatory.');\n\n    // Ref\n    const self = this;\n\n    // Options\n    this.fileUploaderContainer = fileUploaderContainer;\n    this.maxFileSize = opts.maxFileSize || -1;\n    this.acceptFileTypes = opts.acceptFileTypes || undefined;\n    this.croppers = opts.croppers || undefined;\n\n    this.uploadedFiles = [];\n\n    // Cropper stuff\n    this.currentIndex = 0;\n    this.uploadedImages = [];\n    this.uploadedImagesMetadata = [];\n    this.cropperInstances = [];\n\n    // TODO: Check file mimetypes\n    // TODO: Check filesize (should be done backend maybe)\n\n    let html = `<span class=\"btn btn-success fileinput-button\">\n      <i class=\"glyphicon glyphicon-plus\"></i><span>Select files...</span>\n      <input id=\"fileupload\" type=\"file\" name=\"files[]\" multiple=\"\">\n    </span>\n    <br>\n    <br>\n    <div id=\"progress\" class=\"progress\">\n      <div class=\"progress-bar progress-bar-success\"></div>\n    </div>\n    <div id=\"files\" class=\"files\"></div>`;\n\n    const closeBtn = `<button id=\"closeBtn\" class=\"btn btn-default\" type=\"button\" data-dismiss=\"modal\"> Close </button>`;\n    const nextBtn = `<button id=\"nextBtn\" class=\"btn btn-success hidden\" type=\"button\"> Save & Next </button>`;\n\n    // Append elements to DOM\n    $(fileUploaderContainer).append(html);\n    $(fileUploaderMediaController).append(`${closeBtn}${nextBtn}`);\n\n    this._uploader = $('#fileupload').fileupload({\n      url: `/api/files`,\n      dataType: 'json',\n      beforeSend(xhr){\n        xhr.setRequestHeader('csrf-token', window.csrf);\n      },\n      success(data) {\n        // location.href = '/admin/files';\n        self.uploadedFiles = self.uploadedFiles.concat(data);\n      },\n      progressall(e, data) {\n        const progress = parseInt(data.loaded / data.total * 100, 10);\n        $('#progress .progress-bar').css('width', progress + '%');\n      },\n      stop(e) {\n\n        if(!self.croppers) return location.reload();\n\n        // Filter images only\n        self.uploadedFiles.forEach((uploadedFile, index) => {\n          if(['image/jpeg', 'image/jpg', 'image/gif', 'image/png'].indexOf(uploadedFile.mimetype) > -1) {\n            self.uploadedImages.push(uploadedFile);\n          }\n        });\n\n        if(self.uploadedImages.length === 0) return location.reload();\n\n        // Destroy the uploader\n        $('#fileupload').fileupload('destroy');\n        $(fileUploaderContainer).empty();\n\n        $('#nextBtn').removeClass('hidden');\n        $('#closeBtn').addClass('hidden');\n\n        // Show croppers\n        self._showCroppers();\n      }\n    })\n    .prop('disabled', !$.support.fileInput)\n    .parent().addClass($.support.fileInput ? undefined : 'disabled');\n\n  }\n}\n"]}